EXPLANATION OF OBJ. FIELDS

#<virtual number><NL>
   See rules for rooms above.

<namelist>~<NL>:
   Same as for monsters above.

<short description>~<NL>
   This string will be displayed when the object is used. For example
   if it is "a rubber raft", and a player drops it, then a message like:
   "Monthy drops a rubber raft."
   could be displayed.

<long description>~<NL>
   This description is displayed when the object is lying on the ground.
   For example, if it is "A furled umbrella lies here.~" then this message
   is displayed when the umbrella is lying on the ground.

<action description>~<NL>
   Do not use.

<type flag> <!NL>
   This defines what kind of item you are defining.  See Item Type Appendix.
   The type of item will determine what the values (see below) are interpretted
   as.

<extra flag>  <!NL>
   This bitvector defines mostly special effects.  See Extra Flags Appendix.

<wear flag><NL>
   This bitvector defines if items can be taken, and if they can be worn.
   See Wear Flags Appendix.

<value 0> <value 1> <value 2> <value 3> <NL>
   These values are very central. They define the ability of items based on
   the items <Item Type>. These values are defined in "values.doc". Note that
   if you define an item as being anything but a weapon, you shouldn't set
   the 'wield' flag. Many similar obvious rules apply.

<weight>  <!NL>
   The weight of the item in pounds.

<value>  <!NL>
   The value of the item if sold - see "defs.doc" for ideas on prices.
   Any value > 2,000,000 will set the item [rare] (only Max_value set in zone
   file allowed in game.  I.e.  it checks thru rent file for item before loads)

<cost/day> <NL>
   The cost to store the item in the reception overnight.
   A value of -1 implies item can NOT be rented.  Note:  keys should be set
   unrentable so that player's must kill mob holding key each time they want
   what the key unlocks.

<structural points> <!NL>
   ultimately will represent the sturdiness of an object.  A value of -1
   implies that the object will never become so battered it is useless.
   /* not yet implemeted, please enter a value of -1 here */

<max. structure points> <!NL>
   this is the maximum value that structural points can take on.  It
   represents the "totally fixed, and ready to go" EXCELLENT condition
   of the object.
   /* not yet implemeted, please enter a value of -1 here */

<decay time> <!NL>
   the number of ticks this item is good for before it becomes fowl and is
   automatically destroyed.  Should be added to objects like bread that
   have a "natural lifetime".  Tick counter WILL ONLY decay while item is:
        in game (not in rent) AND on ground or in a PC's possession.  If
        the grocer (or a charm) has the item, then it won't decay.  If it
        is in inventory, a container, or equipped by a PC, it will decay.
   Rule of Thumb:  200 is roughly the number of ticks a player spends in the
   game in one day.  1000 = 1 week.  See values.doc for typical decay times of
   food.

<volume> <!NL>
   the size of the object.  A value of 1 is roughly a cubic inch.  Thus an
   object that was a cubic foot would have a value of 12^3= 1728 here.
   You _should_ actually approximate the dimensions of the object in inches,
   multiply and plug this value in.  Dexterity affect max_volume carryable.
   Max_volume is divided by 2 if a shield is used OR a weapon is wielded.
   Max_volume is divided by 3 if a shield and a weapon is in use.
   Volume is "compacted" in a bag; compaction is related to material type.
        typical values:
        ring                    1       helm                    4000
        rock, trinket           50      leggings                2500
        glass of water, potion  500     sleeves                 2000
        short sword (2 ft?)     900     girth                   9000
        sword       (3 feet)    1400    shield                  4500
        long sword  (40 in.)    2000    jacket, shirt           13000
        2H sword    (45 in.)    3300    suit of armor           18000
        dagger      (10 in)     300     boots, gauntlets        4000
        barrel, bag capacity    18000   human body              50000

<material type> <NL>
   This is set to define the material that the object is made of.  It will
   most likely be used in situations like: preventing sneaking in metal
   armor, or incurring extra damage due to wearing plate mail when hit by
   cold/heat spells.  Material type also affects how compacted the object 
   can be worn it is put into a container.  (cloth folds, iron doesn't)
   SEE MATERIALS APPENDIX

Several extra descriptions or none at all may appear. They follow the room
format exactly.

E  <NL>
<keyword-list>~<NL>
   Exactly as in rooms.

<extra description><NL>~<NL>
   Exactly as in rooms.

Between zero and five "affect's" may be set on an item. The affects could
for example modify a characters strength, height etc. The affect only goes
into affect when the character wear, wield or hold the item. The affect
is removed when the character removes the items.

A  <NL>
   When items are worn using wear/wield/grab/hold commands, the 'A' will
   allow the items to affect a characters various abilities. Currently
   a maximum of 5 'A' are allowed.

<location> <!NL>
  See Affects Appendix

<modifier><NL>

   The modifier is added to the APPLY_XXX ability of the character
   when he uses an item, and is subtracted when he stops using it.
   Take great care when using this. This is an example of an item of
   improve strength and armour class. 
     A
     1 2
     A
     17 -2
   This adds +2 to the strength, and adds -2 to the AC (thus improving it).


